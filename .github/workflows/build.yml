name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
          - os: macos-12
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          auto-update-conda: false
          channels: andrsd,conda-forge,defaults
          channel-priority: strict
          miniforge-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          mamba install \
            cmake \
            make \
            automake \
            flex \
            cxx-compiler \
            fmt==9.1.0 \
            lcov

      - name: Configure
        run: |
          cmake -S . -B ${{ github.workspace }}/build \
            -DGMSHPARSERCPP_BUILD_TESTS=YES \
            -DGMSHPARSERCPP_CODE_COVERAGE=YES

      - name: Build
        run: make -C ${{ github.workspace }}/build

      - name: Run tests
        run: make -C ${{ github.workspace }}/build test ARGS='-V'

      - name: Generate code coverage
        if: startsWith(matrix.os, 'ubuntu')
        run: make -C ${{ github.workspace }}/build coverage

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        if: startsWith(matrix.os, 'ubuntu')
        with:
          name: coverage-${{ matrix.os }}
          path: ${{ github.workspace }}/build/coverage.info

  upload-to-codecov:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Upload to Codecov
        uses: codecov/codecov-action@v2

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: 'coverage-ubuntu-22.04/coverage.info'
